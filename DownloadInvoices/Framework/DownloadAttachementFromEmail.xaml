<Activity mc:Ignorable="sap sap2010" x:Class="_05_DownloadInvoiceFromEmail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>935.333333333333,700.666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_05_DownloadInvoiceFromEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail.Outlook.Enums</x:String>
      <x:String>UiPath.Mail.Activities.Triggers</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Mail.Activities.Outlook</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="Download Invoice Attachment" sap:VirtualizedContainerService.HintSize="644,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="OutMailMsg" />
      <Variable x:TypeArguments="x:String" Name="MailAccount" />
      <Variable x:TypeArguments="x:String" Name="MailFolder" />
      <Variable x:TypeArguments="x:String" Name="ImportFolder" />
      <Variable x:TypeArguments="x:String" Name="MailMoveFolder" />
      <Variable x:TypeArguments="x:String" Name="MailFilterFrom" />
      <Variable x:TypeArguments="x:String" Name="SAPInvFolder" />
      <Variable x:TypeArguments="x:String" Name="OtherSAPInvFolder" />
      <Variable x:TypeArguments="x:String" Name="AttachmentFilter" />
      <Variable x:TypeArguments="x:String" Name="NonSAPInvFolder" />
      <Variable x:TypeArguments="x:String" Name="ErrorInvFolder" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,103.666666666667</av:PointCollection>
        <x:Double x:Key="Width">610</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID2</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,103.666666666667</av:Point>
          <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,156.333333333334 300,189</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Mail Variables Assignment" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[MailAccount]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.item("MailAccountName")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[MailFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("MailFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ImportFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("BasePath") + "\" + in_config.Item("ImportFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[MailMoveFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("MailMoveFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[MailFilterFrom]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.item("MailFilterFrom")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_36">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[SAPInvFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("BasePath") + "\" + in_config.item("SAPInvFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[OtherSAPInvFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("BasePath") + "\" + in_config.item("OtherSAPInvFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[AttachmentFilter]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config("AttachmentFilter")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[NonSAPInvFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("BasePath") + "\" + in_config.item("NonSAPInvFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ErrorInvFolder]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_config.Item("BasePath") + "\" + in_config.item("ErrorInvFolder")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,189</av:Point>
              <av:Size x:Key="ShapeSize">200,22</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,211 300,243.666666666667</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[MailAccount]" DisplayName="Get Outlook Mail Messages" Filter="[&quot;[From] = '&quot; + in_config(&quot;MailFilterFromName&quot;) + &quot;'&quot;]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_11" MailFolder="[MailFolder]" MarkAsRead="False" Messages="[OutMailMsg]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Top="30" />
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,243.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each Mail in mail box" sap:VirtualizedContainerService.HintSize="670,3100.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[OutMailMsg]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="snm:MailMessage">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="633.333333333333,2972.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="Attachments" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[item.Attachments.Any]" DisplayName="Check if email has attachments" sap:VirtualizedContainerService.HintSize="591.333333333333,2880.66666666667" sap2010:WorkflowViewState.IdRef="If_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Save attachment process" sap:VirtualizedContainerService.HintSize="554.666666666667,2686" sap2010:WorkflowViewState.IdRef="Sequence_73">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="SlashLastIndex" />
                              <Variable x:TypeArguments="x:String" Name="PDFFileName" />
                              <Variable x:TypeArguments="x:String" Name="MailSubject" />
                              <Variable x:TypeArguments="x:String" Name="MailFrom" />
                              <Variable x:TypeArguments="x:String" Name="MailDateTime" />
                              <Variable x:TypeArguments="x:String" Name="InvSource" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Assign mail properties" sap:VirtualizedContainerService.HintSize="512.666666666667,191.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[MailDateTime]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[item.DateAsDateTime.ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[MailFrom]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[item.From.ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[MailSubject]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[item.Subject]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[InvSource]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">Email</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:SaveMailAttachments Attachments="[Attachments]" DisplayName="Save Attachments" ExcludeInlineAttachments="False" Filter="[AttachmentFilter]" FolderPath="[ImportFolder]" sap:VirtualizedContainerService.HintSize="512.666666666667,93.3333333333333" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_12" Message="[item]" OverwriteExisting="False">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SaveMailAttachments>
                            <If Condition="[Attachments.Count() &gt; 0]" DisplayName="check any attachment saved in folder" sap:VirtualizedContainerService.HintSize="512.666666666667,2229.33333333333" sap2010:WorkflowViewState.IdRef="If_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="476,2034.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="FileName" />
                                    <Variable x:TypeArguments="x:String" Name="FileFolderName" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Read email for invoice attachments" sap:VirtualizedContainerService.HintSize="434,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[string.format(in_config(&quot;LogMessage_ReadEmail&quot;), item.DateAsDateTime)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <Assign DisplayName="Get file name from path" sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.GetFileName(ImportFolder)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Saved all attachments" sap:VirtualizedContainerService.HintSize="434,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[String.format(in_config(&quot;LogMessage_SaveAttachment&quot;), item.Attachments.Count.ToString, FileName)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Check valid SAP Inv and Move to target folder" sap:VirtualizedContainerService.HintSize="434,846" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[Attachments]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,718" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="MatchedStatus" />
                                            <Variable x:TypeArguments="x:String" Name="TargetFolder" />
                                            <Variable x:TypeArguments="x:String" Name="AppMsg" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Get file name from path" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Path.GetFileName(item.ToString)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Check for SAP Invoice" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\CheckValidPOInvoice.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[item.ToString]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_MatchStatus">[MatchedStatus]</OutArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_config">[in_config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_InvFileName">[FileName]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Move Inv to Target Folder" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\MoveInvToFolder.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_isSAPInv">[MatchedStatus]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SAPInvFolder">[SAPInvFolder]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SourceFile">[item.ToString]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_config">[in_config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PDFFileName">[FileName]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_NonSAPInvFolder">[NonSAPInvFolder]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_OtherSAPInvFolder">[OtherSAPInvFolder]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorInvFolder">[ErrorInvFolder]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_Target_Folder">[TargetFolder]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[AppMsg]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[FileName + "," + TargetFolder + "," + MatchedStatus + "," + InvSource  + "," + MailFrom  + "," +  MailDateTime]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\LogMessage.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[AppMsg]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogType">Info</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_config">[in_config]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                  <ui:MarkOutlookMailAsRead DisplayName="Mark Mail As Read" sap:VirtualizedContainerService.HintSize="434,148" sap2010:WorkflowViewState.IdRef="MarkOutlookMailAsRead_18" MailMessage="[item]" MarkAs="Read">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MarkOutlookMailAsRead>
                                  <ui:LogMessage DisplayName="Mark mail as read" sap:VirtualizedContainerService.HintSize="434,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[String.format(in_config(&quot;LogMessage_MarkAsRead&quot;), item.Date)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="434,93.3333333333333" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_14" MailFolder="[MailMoveFolder]" MailMessage="[item]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MoveOutlookMessage>
                                  <ui:LogMessage DisplayName="Move mail to folder" sap:VirtualizedContainerService.HintSize="434,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[String.format(in_config(&quot;LogMessage_MoveMailToFolder&quot;), item.Date, MailMoveFolder)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:LogMessage DisplayName="Read invoice process completed" sap:VirtualizedContainerService.HintSize="434,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[in_config(&quot;LogMessage_End&quot;)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>