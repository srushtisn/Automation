<Activity mc:Ignorable="sap sap2010" x:Class="GetItemFromExcelAndProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_QueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_SuccessFlag" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>967.333333333333,837.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetItemFromExcelAndProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="GetItemFromExcelAndProcess" sap:VirtualizedContainerService.HintSize="654,772.666666666667" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FinalHeader" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Items" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="config" />
      <Variable x:TypeArguments="x:String" Name="AppMsg" />
      <Variable x:TypeArguments="x:String" Name="TargetFolder" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Header" />
      <Variable x:TypeArguments="x:String" Name="InvFileName" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">260,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">290,77.1666666666667 290,119</av:PointCollection>
        <x:Double x:Key="Height">736.3333333333336</x:Double>
        <x:Double x:Key="Width">620</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,335.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,404.666666666666 290,445.333333333333</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Cleanup Datatable" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dt_FinalItems" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign-Simple Fields" sap:VirtualizedContainerService.HintSize="520.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dt_FinalHeader]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dt_Header.Clone]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign - Items" sap:VirtualizedContainerService.HintSize="520.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dt_FinalItems]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dt_Items.Clone]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each- For Header" sap:VirtualizedContainerService.HintSize="520.666666666667,506.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[dt_FinalHeader.Columns]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[item.ToString.ToLower.Contains(&quot;confidence&quot;)]" DisplayName="If- &quot;Confidence&quot; Column name" sap:VirtualizedContainerService.HintSize="484,380" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[item.ToString]" DataTable="[dt_Header]" DisplayName="Remove Data (Confidence) Column" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:RemoveDataColumn>
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each - For Items" sap:VirtualizedContainerService.HintSize="520.666666666667,506.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[dt_FinalItems.Columns]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[item.ToString.ToLower.Contains(&quot;confidence&quot;)]" DisplayName="If- Check &quot;Confidence&quot; Column Name" sap:VirtualizedContainerService.HintSize="484,380" sap2010:WorkflowViewState.IdRef="If_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[item.ToString]" DataTable="[dt_Items]" DisplayName="Remove Data Column- Confidence Column" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:RemoveDataColumn>
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">190,445.333333333333</av:Point>
              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Add invoice to Queue" sap:VirtualizedContainerService.HintSize="936.666666666667,1321.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="jsnHeader" />
              <Variable x:TypeArguments="x:String" Name="jsnItems" />
              <Variable x:TypeArguments="x:String" Name="strReference" />
              <Variable x:TypeArguments="x:String" Name="xlsFileName" />
              <Variable x:TypeArguments="s:DateTime" Name="InvoiceDate" />
              <Variable x:TypeArguments="x:Int64" Name="dtDiff" />
              <Variable x:TypeArguments="x:String" Name="pdfFileName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="894.666666666667,252.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[jsnHeader]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[JsonConvert.SerializeObject(dt_Header)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[jsnItems]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[JsonConvert.SerializeObject(dt_Items)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[xlsFileName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_FilePath.ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strReference]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[trim(path.GetFileNameWithoutExtension(xlsFileName)) + ".pdf"]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="s:DateTime">[InvoiceDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="s:DateTime">[CDate(dt_Header.Rows(0)("InvoiceDate").ToString)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Int64">[dtDiff]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Int64">[DateDiff(DateInterval.Day,InvoiceDate,now)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <If Condition="[dtDiff&gt;CInt(in_Config(&quot;InvoicePostingDelay&quot;).ToString)]" DisplayName="If-Check diff is greater than 10" sap:VirtualizedContainerService.HintSize="894.666666666667,936.666666666667" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="472.666666666667,772.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="SourceInvPath" />
                    <Variable x:TypeArguments="x:String" Name="TargetInvPath" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Item in Queue" sap:VirtualizedContainerService.HintSize="430.666666666667,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_4" Priority="Normal" QueueType="[in_Config(&quot;QueueName&quot;)]" Reference="[strReference]">
                    <ui:AddQueueItem.ItemInformation>
                      <InArgument x:TypeArguments="x:String" x:Key="InvoiceHeader">[jsnHeader]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="invoiceItems">[jsnItems]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="InvFileName">[xlsFileName]</InArgument>
                    </ui:AddQueueItem.ItemInformation>
                  </ui:AddQueueItem>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Post-extraction &amp;&#xA;Data Export" DisplayName="Move xls to Folder" sap:VirtualizedContainerService.HintSize="430.666666666667,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\MoveInvToFolder.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_config">[config]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuccessFlag">True</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_InvFileName">[in_FilePath]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TargetFolder">[TargetFolder]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:MultipleAssign DisplayName="Move invoice PDF file Assignments" sap:VirtualizedContainerService.HintSize="430.666666666667,160.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[InvFileName]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[trim(path.GetFileNameWithoutExtension(xlsFileName)) + ".pdf"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[SourceInvPath]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[in_config("BasePath") + "\" + in_Config("SAPInvSourceFolder") + "\" + InvFileName]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[TargetInvPath]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[in_config("BasePath") + "\" + in_Config("SAPInvFolder")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:MoveFile ContinueOnError="{x:Null}" Destination="[TargetInvPath]" DisplayName="Move Invoice PDF File" sap:VirtualizedContainerService.HintSize="430.666666666667,162" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="False" Path="[SourceInvPath]" />
                  <Assign DisplayName="Assign - Success Flag" sap:VirtualizedContainerService.HintSize="430.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[out_SuccessFlag]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Failed Case" sap:VirtualizedContainerService.HintSize="376,381.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Display Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_Config(&quot;LogMessage_InvoicePostingDelay&quot;)]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,206" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Post-extraction &amp;&#xA;Data Export" DisplayName="Move Inv to Folder" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\MoveInvToFolder.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_config">[config]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_SuccessFlag">False</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_InvFileName">[in_FilePath]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_TargetFolder">[TargetFolder]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <Assign DisplayName="Assign - Success Flag" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[out_SuccessFlag]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">159,119</av:Point>
          <av:Size x:Key="ShapeSize">262,62</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,180.333333333333 290,226</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign - Config File" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[config]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[in_Config]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">190,226</av:Point>
              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">290,295.333333333333 290,335.333333333333</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Read Data From Excel" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange AddHeaders="True" DataTable="[dt_Header]" DisplayName="Read Range - 'Header'" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Simple Fields" WorkbookPath="[in_FilePath]">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <ui:ReadRange AddHeaders="True" DataTable="[dt_Items]" DisplayName="Read Range - 'items'" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Items" WorkbookPath="[in_FilePath]">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID1</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
  </Flowchart>
</Activity>